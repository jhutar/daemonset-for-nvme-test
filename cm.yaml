apiVersion: v1
kind: ConfigMap
metadata:
  name: nvme-storage-configurator
  namespace: nvme-storage-config
data:
  configure.sh: |
    #!/usr/bin/env bash

    if [ -f /host-etc-systemd-dir/nvme-init-done ]; then
      echo 'NVMe init already done'
      exit 0
    fi

    # We can not rely on device name like /dev/nvme1n1
    DEVICE="$( ls /host-dev-dir/disk/by-id/nvme-Amazon_EC2_NVMe_Instance_Storage_* | sort | head -n1 | sed "s|^/host-dev-dir|/dev|" )"
    echo "Going to use device $DEVICE"

    # Deploy SystemD config
    for i in nvme-storage-format.service var-home-nvme.mount nvme-storage-dirs.service var-lib-kubelet-pods.mount var-lib-containers.mount nvme-storage-restorecon.service; do
      cp -f "/scripts/$i" "/host-etc-systemd-dir/$i"
      chmod 0644 "/host-etc-systemd-dir/$i"
      sed -i "s|DEVICE|$DEVICE|g" "/host-etc-systemd-dir/$i"
    done

    nsenter -t 1 -m -u -i -n -p -- systemctl daemon-reload
    nsenter -t 1 -m -u -i -n -p -- systemctl enable nvme-storage-format.service var-home-nvme.mount nvme-storage-dirs.service var-lib-kubelet-pods.mount var-lib-containers.mount nvme-storage-restorecon.service
    touch /host-etc-systemd-dir/nvme-init-done
    nsenter -t 1 -m -u -i -n -p -- systemctl reboot

  nvme-storage-format.service: |
    [Unit]
    Description=Format NVMe drive if needed
    Before=var-home-nvme.mount
    After=sysinit.target

    [Service]
    Type=oneshot
    RemainAfterExit=yes
    Restart=no
    ExecStart=/bin/bash -xc "lsblk -no FSTYPE DEVICE | grep -q ^. && echo 'Already formated' || mkfs -t xfs DEVICE"

  var-home-nvme.mount: |
    [Unit]
    Description=Mount NVMe drive
    After=nvme-storage-format.service
    BindsTo=nvme-storage-format.service
    Before=local-fs.target

    [Mount]
    What=DEVICE
    Where=/var/home/nvme
    Type=xfs
    DirectoryMode=0755

  nvme-storage-dirs.service: |
    [Unit]
    Description=Create directories on NVMe drive if needed
    After=var-home-nvme.mount
    BindsTo=var-home-nvme.mount
    Before=var-lib-kubelet-pods.mount var-lib-containers.mount

    [Service]
    Type=oneshot
    RemainAfterExit=yes
    Restart=no
    ExecStart=/bin/bash -xc "mkdir -p /var/home/nvme/var-lib-kubelet-pods /var/home/nvme/var-lib-containers"

  var-lib-kubelet-pods.mount: |
    [Unit]
    Description=Bind mount kubelet/pods directory on NVMe drive
    Before=nvme-storage-restorecon.service
    After=nvme-storage-dirs.service
    BindsTo=nvme-storage-dirs.service

    [Mount]
    Where=/var/lib/kubelet/pods
    What=/var/home/nvme/var-lib-kubelet-pods
    Options=bind
    DirectoryMode=0755

    [Install]
    RequiredBy=kubelet-dependencies.target

  var-lib-containers.mount: |
    [Unit]
    Description=Bind mount containers directory on NVMe drive
    Before=nvme-storage-restorecon.service
    After=nvme-storage-dirs.service
    BindsTo=nvme-storage-dirs.service

    [Mount]
    Where=/var/lib/containers
    What=/var/home/nvme/var-lib-containers
    Options=bind
    DirectoryMode=0755

    [Install]
    RequiredBy=kubelet-dependencies.target

  nvme-storage-restorecon.service: |
    [Unit]
    Description=Restorecon on bind mounted dirs
    Before=local-fs.target kubelet-dependencies.target
    After=var-lib-kubelet-pods.mount var-lib-containers.mount
    BindsTo=var-home-nvme.mount

    [Service]
    Type=oneshot
    RemainAfterExit=yes
    Restart=no
    ExecStart=/bin/bash -xc "restorecon -R -v -F /var/lib/containers /var/lib/kubelet/pods"

    [Install]
    RequiredBy=kubelet-dependencies.target
